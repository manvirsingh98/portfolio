[{"/home/manvir/Desktop/portfolio/frontend/src/index.js":"1","/home/manvir/Desktop/portfolio/frontend/src/store.js":"2","/home/manvir/Desktop/portfolio/frontend/src/App.js":"3","/home/manvir/Desktop/portfolio/frontend/src/reducers/portfolioReducers.js":"4","/home/manvir/Desktop/portfolio/frontend/src/reducers/userReducers.js":"5","/home/manvir/Desktop/portfolio/frontend/src/components/Header.js":"6","/home/manvir/Desktop/portfolio/frontend/src/screens/LoginScreen.js":"7","/home/manvir/Desktop/portfolio/frontend/src/screens/HomeScreen.js":"8","/home/manvir/Desktop/portfolio/frontend/src/screens/DashboardScreen.js":"9","/home/manvir/Desktop/portfolio/frontend/src/components/Footer.js":"10","/home/manvir/Desktop/portfolio/frontend/src/constants/userConstants.js":"11","/home/manvir/Desktop/portfolio/frontend/src/actions/userActions.js":"12","/home/manvir/Desktop/portfolio/frontend/src/actions/portfolioActions.js":"13","/home/manvir/Desktop/portfolio/frontend/src/components/AdminAsideNav.js":"14","/home/manvir/Desktop/portfolio/frontend/src/components/AdminAsideNavLink.js":"15","/home/manvir/Desktop/portfolio/frontend/src/components/UserList.js":"16","/home/manvir/Desktop/portfolio/frontend/src/components/AdminCard.js":"17","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminAboutSection.js":"18","/home/manvir/Desktop/portfolio/frontend/src/constants/portfolioConstants.js":"19","/home/manvir/Desktop/portfolio/frontend/src/reducers/servicesReducers.js":"20","/home/manvir/Desktop/portfolio/frontend/src/constants/servicesConstants.js":"21","/home/manvir/Desktop/portfolio/frontend/src/actions/servicesActions.js":"22","/home/manvir/Desktop/portfolio/frontend/src/reducers/socialProfilesReducers.js":"23","/home/manvir/Desktop/portfolio/frontend/src/constants/socialProfilesConstants.js":"24","/home/manvir/Desktop/portfolio/frontend/src/actions/socialProfilesActions.js":"25","/home/manvir/Desktop/portfolio/frontend/src/components/Loader.js":"26","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditServiceForm.js":"27","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditSocialProfileForm.js":"28","/home/manvir/Desktop/portfolio/frontend/src/reducers/experiencesReducers.js":"29","/home/manvir/Desktop/portfolio/frontend/src/constants/experiencesConstants.js":"30","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminHeroSection.js":"31","/home/manvir/Desktop/portfolio/frontend/src/actions/experiencesActions.js":"32","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminExperienceSection.js":"33","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditExperienceForm.js":"34","/home/manvir/Desktop/portfolio/frontend/src/reducers/skillsReducers.js":"35","/home/manvir/Desktop/portfolio/frontend/src/constants/skillsConstants.js":"36","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminSkillsSection.js":"37","/home/manvir/Desktop/portfolio/frontend/src/actions/skillsActions.js":"38","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditSkillForm.js":"39","/home/manvir/Desktop/portfolio/frontend/src/reducers/qualificatinsReducers.js":"40","/home/manvir/Desktop/portfolio/frontend/src/constants/qualificationsConstants.js":"41","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminQualificationSection.js":"42","/home/manvir/Desktop/portfolio/frontend/src/actions/qualificationsActions.js":"43","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditQualificationForm.js":"44","/home/manvir/Desktop/portfolio/frontend/src/reducers/projectsReducers.js":"45","/home/manvir/Desktop/portfolio/frontend/src/constants/projectsConstants.js":"46","/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminProjectsSection.js":"47","/home/manvir/Desktop/portfolio/frontend/src/actions/projectsActions.js":"48","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditProjectForm.js":"49","/home/manvir/Desktop/portfolio/frontend/src/Qualification.js":"50","/home/manvir/Desktop/portfolio/frontend/src/About.js":"51","/home/manvir/Desktop/portfolio/frontend/src/Work.js":"52","/home/manvir/Desktop/portfolio/frontend/src/Contact.js":"53","/home/manvir/Desktop/portfolio/frontend/src/Skill.js":"54","/home/manvir/Desktop/portfolio/frontend/src/Hero.js":"55","/home/manvir/Desktop/portfolio/frontend/src/Experience.js":"56"},{"size":327,"mtime":1614985925101,"results":"57","hashOfConfig":"58"},{"size":2368,"mtime":1614461777948,"results":"59","hashOfConfig":"58"},{"size":1693,"mtime":1615155525252,"results":"60","hashOfConfig":"58"},{"size":1091,"mtime":1612726912009,"results":"61","hashOfConfig":"58"},{"size":1010,"mtime":1611373320675,"results":"62","hashOfConfig":"58"},{"size":2590,"mtime":1615237200533,"results":"63","hashOfConfig":"58"},{"size":1958,"mtime":1615237270937,"results":"64","hashOfConfig":"58"},{"size":703,"mtime":1615155600557,"results":"65","hashOfConfig":"58"},{"size":2927,"mtime":1614463910492,"results":"66","hashOfConfig":"58"},{"size":476,"mtime":1612041055871,"results":"67","hashOfConfig":"58"},{"size":411,"mtime":1612570206008,"results":"68","hashOfConfig":"58"},{"size":1754,"mtime":1611373320579,"results":"69","hashOfConfig":"58"},{"size":1418,"mtime":1612727353663,"results":"70","hashOfConfig":"58"},{"size":1729,"mtime":1615237381953,"results":"71","hashOfConfig":"58"},{"size":432,"mtime":1612731175365,"results":"72","hashOfConfig":"58"},{"size":2034,"mtime":1614383941598,"results":"73","hashOfConfig":"58"},{"size":3913,"mtime":1614628579378,"results":"74","hashOfConfig":"58"},{"size":4963,"mtime":1614379617046,"results":"75","hashOfConfig":"58"},{"size":419,"mtime":1612726802453,"results":"76","hashOfConfig":"58"},{"size":1578,"mtime":1612733346088,"results":"77","hashOfConfig":"58"},{"size":614,"mtime":1612733210559,"results":"78","hashOfConfig":"58"},{"size":2047,"mtime":1612734349690,"results":"79","hashOfConfig":"58"},{"size":1761,"mtime":1612820267624,"results":"80","hashOfConfig":"58"},{"size":730,"mtime":1612819957236,"results":"81","hashOfConfig":"58"},{"size":2214,"mtime":1612820608287,"results":"82","hashOfConfig":"58"},{"size":266,"mtime":1612729209589,"results":"83","hashOfConfig":"58"},{"size":3471,"mtime":1612821168999,"results":"84","hashOfConfig":"58"},{"size":3551,"mtime":1612821133411,"results":"85","hashOfConfig":"58"},{"size":1680,"mtime":1612839869073,"results":"86","hashOfConfig":"58"},{"size":674,"mtime":1612839616753,"results":"87","hashOfConfig":"58"},{"size":3724,"mtime":1612840663846,"results":"88","hashOfConfig":"58"},{"size":2131,"mtime":1614629195501,"results":"89","hashOfConfig":"58"},{"size":1386,"mtime":1614629878501,"results":"90","hashOfConfig":"58"},{"size":9858,"mtime":1614630081532,"results":"91","hashOfConfig":"58"},{"size":1514,"mtime":1613336383459,"results":"92","hashOfConfig":"58"},{"size":574,"mtime":1613336229242,"results":"93","hashOfConfig":"58"},{"size":1309,"mtime":1613856155345,"results":"94","hashOfConfig":"58"},{"size":1991,"mtime":1613853204549,"results":"95","hashOfConfig":"58"},{"size":4083,"mtime":1613854339593,"results":"96","hashOfConfig":"58"},{"size":1788,"mtime":1614382340879,"results":"97","hashOfConfig":"58"},{"size":734,"mtime":1614380079035,"results":"98","hashOfConfig":"58"},{"size":1529,"mtime":1614382375164,"results":"99","hashOfConfig":"58"},{"size":2221,"mtime":1614380482405,"results":"100","hashOfConfig":"58"},{"size":4226,"mtime":1614383525600,"results":"101","hashOfConfig":"58"},{"size":1578,"mtime":1614463113672,"results":"102","hashOfConfig":"58"},{"size":614,"mtime":1614461481063,"results":"103","hashOfConfig":"58"},{"size":1372,"mtime":1614463073492,"results":"104","hashOfConfig":"58"},{"size":2047,"mtime":1614463576473,"results":"105","hashOfConfig":"58"},{"size":3931,"mtime":1614464117552,"results":"106","hashOfConfig":"58"},{"size":1916,"mtime":1615236360765,"results":"107","hashOfConfig":"58"},{"size":3599,"mtime":1615242996373,"results":"108","hashOfConfig":"58"},{"size":1681,"mtime":1615581032549,"results":"109","hashOfConfig":"58"},{"size":2357,"mtime":1614985409736,"results":"110","hashOfConfig":"58"},{"size":4235,"mtime":1615573417037,"results":"111","hashOfConfig":"58"},{"size":1443,"mtime":1615573223804,"results":"112","hashOfConfig":"58"},{"size":4319,"mtime":1615260993834,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1n7p5d6",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/home/manvir/Desktop/portfolio/frontend/src/index.js",[],["237","238"],"/home/manvir/Desktop/portfolio/frontend/src/store.js",[],"/home/manvir/Desktop/portfolio/frontend/src/App.js",[],"/home/manvir/Desktop/portfolio/frontend/src/reducers/portfolioReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/reducers/userReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/Header.js",[],"/home/manvir/Desktop/portfolio/frontend/src/screens/LoginScreen.js",[],"/home/manvir/Desktop/portfolio/frontend/src/screens/HomeScreen.js",[],"/home/manvir/Desktop/portfolio/frontend/src/screens/DashboardScreen.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/Footer.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/userConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/userActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/portfolioActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/AdminAsideNav.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/AdminAsideNavLink.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/UserList.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/AdminCard.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminAboutSection.js",["239"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPortfolio, updatePortfolio } from \"../../actions/portfolioActions\";\nimport { PORTFOLIO_UPDATE_RESET } from \"../../constants/portfolioConstants\";\nimport { listServices } from \"../../actions/servicesActions\";\nimport { getSocialProfiles } from \"../../actions/socialProfilesActions\";\n\nimport AdminCard from \"../AdminCard\";\nimport Loader from \"../../components/Loader\";\nconst AdminAboutSection = ({ location }) => {\n  const [aboutTitle, setAboutTitle] = useState(\"\");\n  const [aboutSummary, setAboutSummary] = useState(\"\");\n\n  //Dispatch\n  const dispatch = useDispatch();\n\n  //Get PortfolioInfo\n  const portfolioInfo = useSelector((state) => state.portfolioInfo);\n  const { loading, error, portfolio } = portfolioInfo;\n\n  //Get Portfolio Update\n  const portfolioUpdate = useSelector((state) => state.portfolioUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = portfolioUpdate;\n\n  //Get services\n  const serviceList = useSelector((state) => state.serviceList);\n  const {\n    loading: loadingServices,\n    error: errorServices,\n    services,\n  } = serviceList;\n\n  //Get Social Profiles\n  const socialProfilesList = useSelector((state) => state.socialProfilesList);\n  const {\n    loading: loadingsocialProfiles,\n    error: errorsocialProfiles,\n    socialProfiles,\n  } = socialProfilesList;\n\n  //use effect\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PORTFOLIO_UPDATE_RESET });\n      dispatch(getPortfolio());\n    } else {\n      if (!portfolio.position && !portfolio.summary) {\n        dispatch(getPortfolio());\n      } else {\n        setAboutTitle(portfolio.aboutTitle);\n        setAboutSummary(portfolio.aboutSummary);\n        dispatch(listServices());\n        dispatch(getSocialProfiles());\n      }\n    }\n  }, [dispatch, portfolio.aboutTitle, portfolio.aboutSummary, successUpdate]);\n\n  const handleUpdateAbout = (e) => {\n    e.preventDefault();\n    dispatch(\n      updatePortfolio({\n        aboutTitle,\n        aboutSummary,\n      })\n    );\n  };\n\n  return (\n    <Container className=\"py-5\">\n      <Row>\n        <Col md={12}>\n          <h3>About Section</h3>\n        </Col>\n      </Row>\n      <Row className=\"msg\">\n        <Col md={12}>\n          {loadingUpdate && <h1>loading.....</h1>}\n          {errorUpdate && <h1>{errorUpdate}</h1>}\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col md={12}>\n          {loading && <Loader />}\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <form onSubmit={handleUpdateAbout}>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>About Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter aboutTitle\"\n                value={aboutTitle}\n                name=\"aboutTitle\"\n                onChange={(e) => setAboutTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formSummary\">\n              <Form.Label>About Summary</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={4}\n                placeholder=\"Enter About Summary \"\n                value={aboutSummary}\n                name=\"aboutSummary\"\n                onChange={(e) => setAboutSummary(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button className=\"btn btn-primary my-3\" type=\"submit\">\n              Submit\n            </Button>\n          </form>\n        </Col>\n      </Row>\n      <Row className=\"\">\n        {loadingServices && <h1>Loading.....</h1>}\n        {errorServices && <h1>Error.....</h1>}\n        <Col md={12}>\n          <h3 className=\"section-title py-5\">Services</h3>\n        </Col>\n        {loadingServices && <Loader />}\n        {errorServices && <Alert variant=\"danger\">{errorServices}</Alert>}\n        {services &&\n          services.map((service, idx) => (\n            <Col md={4} key={service._id}>\n              <AdminCard\n                data={service}\n                path={`${location.pathname}/services/${service._id}`}\n              />\n            </Col>\n          ))}\n      </Row>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"py-5\">Social Profiles</h3>\n        </Col>\n        {loadingsocialProfiles && <Loader />}\n        {errorsocialProfiles && (\n          <Alert variant=\"danger\">{errorsocialProfiles}</Alert>\n        )}\n        {socialProfiles &&\n          socialProfiles.map((socialProfile, idx) => (\n            <Col md={4} key={socialProfile._id}>\n              <AdminCard\n                data={socialProfile}\n                path={`${location.pathname}/socialProfiles/${socialProfile._id}`}\n              />\n            </Col>\n          ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default AdminAboutSection;\n","/home/manvir/Desktop/portfolio/frontend/src/constants/portfolioConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/reducers/servicesReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/servicesConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/servicesActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/reducers/socialProfilesReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/socialProfilesConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/socialProfilesActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/Loader.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditServiceForm.js",["240","241","242","243"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listServiceDetails,\n  updateService,\n} from \"../../actions/servicesActions\";\nimport { SERVICE_UPDATE_RESET } from \"../../constants/servicesConstants\";\nconst EditServiceForm = ({ history, match }) => {\n  const serviceId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const serviceDetails = useSelector((state) => state.serviceDetails);\n  const { loading, error, service } = serviceDetails;\n\n  const serviceUpdate = useSelector((state) => state.serviceUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = serviceUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: SERVICE_UPDATE_RESET });\n      dispatch(listServiceDetails(serviceId));\n      history.push(\"/dashboard/aboutSection\");\n    } else {\n      if (!service.name || service._id !== serviceId) {\n        dispatch(listServiceDetails(serviceId));\n      } else {\n        setName(service.name);\n        setDescription(service.description);\n        setIcon(service.icon);\n      }\n    }\n  }, [dispatch, serviceId, history, service, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name, description, icon);\n    dispatch(\n      updateService({\n        _id: serviceId,\n        name,\n        description,\n        icon,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"services\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Service </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter label\"\n                    value={name}\n                    name=\"name\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formSummary\">\n                  <Form.Label>Summary</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Enter Description\"\n                    value={description}\n                    name=\"description\"\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Icon</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Icon\"\n                    value={icon}\n                    name=\"icon\"\n                    onChange={(e) => setIcon(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditServiceForm;\n","/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditSocialProfileForm.js",["244","245","246","247"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listSocialProfileDetails,\n  updateSocialProfile,\n} from \"../../actions/socialProfilesActions\";\nimport { SOCIAL_PROFILE_UPDATE_RESET } from \"../../constants/socialProfilesConstants\";\nconst EditSocialProfileForm = ({ history, match }) => {\n  const socialProfileId = match.params.id;\n\n  const [network, setNetwork] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const socialProfileDetails = useSelector(\n    (state) => state.socialProfileDetails\n  );\n  const { loading, error, socialProfile } = socialProfileDetails;\n\n  const socialProfileUpdate = useSelector((state) => state.socialProfileUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = socialProfileUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: SOCIAL_PROFILE_UPDATE_RESET });\n      dispatch(listSocialProfileDetails(socialProfileId));\n      history.push(\"/dashboard/aboutSection\");\n    } else {\n      if (!socialProfile.network || socialProfile._id !== socialProfileId) {\n        dispatch(listSocialProfileDetails(socialProfileId));\n      } else {\n        setNetwork(socialProfile.network);\n        setUrl(socialProfile.url);\n        setIcon(socialProfile.icon);\n      }\n    }\n  }, [dispatch, socialProfileId, history, socialProfile, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateSocialProfile({\n        _id: socialProfileId,\n        network,\n        url,\n        icon,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"services\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Social Profile </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Network</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter network\"\n                    value={network}\n                    name=\"network\"\n                    onChange={(e) => setNetwork(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formSummary\">\n                  <Form.Label>URL</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter URL\"\n                    value={url}\n                    name=\"url\"\n                    onChange={(e) => setUrl(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Icon</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Icon\"\n                    value={icon}\n                    name=\"icon\"\n                    onChange={(e) => setIcon(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditSocialProfileForm;\n","/home/manvir/Desktop/portfolio/frontend/src/reducers/experiencesReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/experiencesConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminHeroSection.js",["248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPortfolio, updatePortfolio } from \"../../actions/portfolioActions\";\nimport { PORTFOLIO_UPDATE_RESET } from \"../../constants/portfolioConstants\";\nconst AdminHeroSection = () => {\n  const [name, setName] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [resumePath, setResumePath] = useState(\"\");\n\n  //Dispatch\n  const dispatch = useDispatch();\n\n  //Get PortfolioInfo\n  const portfolioInfo = useSelector((state) => state.portfolioInfo);\n  const { loading, error, portfolio } = portfolioInfo;\n\n  //Get Portfolio Update\n  const portfolioUpdate = useSelector((state) => state.portfolioUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = portfolioUpdate;\n\n  //use effect\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PORTFOLIO_UPDATE_RESET });\n      dispatch(getPortfolio());\n    } else {\n      if (!portfolio.name && !portfolio.position) {\n        dispatch(getPortfolio());\n      } else {\n        setName(portfolio.name);\n        setSummary(portfolio.summary);\n        setPosition(portfolio.position);\n        setResumePath(portfolio.resumePath);\n      }\n    }\n  }, [dispatch, portfolio.name, portfolio.position, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updatePortfolio({\n        name,\n        summary,\n        position,\n        resumePath,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"py-5\">\n        <Row>\n          <Col md={12}>\n            <h3>Hero Banner Section</h3>\n          </Col>\n        </Row>\n        <Row className=\"form-outer my-5\">\n          <Col md={12}>\n            <form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter label\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Summary</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Enter Summary\"\n                  name=\"summary\"\n                  value={summary}\n                  onChange={(e) => setSummary(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Position</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter position\"\n                  name=\"position\"\n                  value={position}\n                  onChange={(e) => setPosition(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Resume Path</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter resumePath\"\n                  name=\"resumePath\"\n                  value={resumePath}\n                  onChange={(e) => setResumePath(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AdminHeroSection;\n","/home/manvir/Desktop/portfolio/frontend/src/actions/experiencesActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminExperienceSection.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditExperienceForm.js",["253","254","255","256"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { AiOutlineDelete, AiOutlinePlus } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listExperienceDetails,\n  updateExperience,\n} from \"../../actions/experiencesActions\";\nimport { EXPERIENCE_UPDATE_RESET } from \"../../constants/experiencesConstants\";\nconst EditExperienceForm = ({ history, match }) => {\n  const experienceId = match.params.id;\n\n  const [companyName, setCompanyName] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [duties, setDuties] = useState([{ duty: \"\" }]);\n\n  const [usedTechnologies, setUsedTechnologies] = useState([\n    { name: \"\", icon: \"\" },\n  ]);\n  // handle input change\n  const handleUsedTechnologiesChange = (e, index) => {\n    const { name, value } = e.target;\n    const usedTechnology = [...usedTechnologies];\n    usedTechnology[index][name] = value;\n    setUsedTechnologies(usedTechnology);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const usedTechnology = [...usedTechnologies];\n    usedTechnology.splice(index, 1);\n    setUsedTechnologies(usedTechnology);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setUsedTechnologies([...usedTechnologies, { name: \"\", icon: \"\" }]);\n  };\n\n  // handle input change\n  const handleDutiesChange = (e, index) => {\n    const { name, value } = e.target;\n    const duty = [...duties];\n    duty[index][name] = value;\n    setDuties(duty);\n  };\n\n  // handle click event of the Remove button\n  const handleDutyRemoveClick = (index) => {\n    const duty = [...duties];\n    duty.splice(index, 1);\n    setDuties(duty);\n  };\n\n  // handle click event of the Add button\n  const handleDutyAddClick = () => {\n    setDuties([...duties, { duty: \"\" }]);\n  };\n\n  const dispatch = useDispatch();\n\n  const experienceDetails = useSelector((state) => state.experienceDetails);\n  const { loading, error, experience } = experienceDetails;\n\n  const experienceUpdate = useSelector((state) => state.experienceUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = experienceUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: EXPERIENCE_UPDATE_RESET });\n      dispatch(listExperienceDetails(experienceId));\n      history.push(\"/dashboard/experienceSection\");\n    } else {\n      if (!experience.companyName || experience._id !== experienceId) {\n        dispatch(listExperienceDetails(experienceId));\n      } else {\n        setCompanyName(experience.companyName);\n        setPosition(experience.position);\n        setStartDate(experience.startDate);\n        setEndDate(experience.endDate);\n        setCategory(experience.category);\n        setUsedTechnologies(experience.usedTechnologies);\n        setDuties(experience.duties);\n      }\n    }\n  }, [dispatch, experienceId, history, experience, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      companyName,\n      position,\n      startDate,\n      endDate,\n      category,\n      usedTechnologies,\n      duties,\n    };\n    console.log(data);\n    dispatch(\n      updateExperience({\n        _id: experienceId,\n        companyName,\n        position,\n        startDate,\n        endDate,\n        category,\n        usedTechnologies,\n        duties,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"services\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Experience </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Company Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter CompanyName\"\n                    name=\"companyName\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formSummary\">\n                  <Form.Label>Position</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter position\"\n                    name=\"position\"\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Start Date</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter startDate\"\n                    name=\"startDate\"\n                    value={startDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>End Date</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter endDate\"\n                    name=\"endDate\"\n                    value={endDate}\n                    onChange={(e) => setEndDate(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                  <Form.Label>Category</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"category\"\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                  >\n                    <option value=\"\">choose...</option>\n                    <option value=\"professional\">professional</option>\n                    <option value=\"internship\">internship</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                  <Form.Label>Used Technology</Form.Label>\n\n                  {usedTechnologies.map((x, i) => {\n                    return (\n                      <div key={i}>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter name\"\n                          name=\"name\"\n                          value={x.name}\n                          onChange={(e) => handleUsedTechnologiesChange(e, i)}\n                          className=\"mb-2\"\n                        />\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter icon\"\n                          name=\"icon\"\n                          value={x.icon}\n                          onChange={(e) => handleUsedTechnologiesChange(e, i)}\n                          className=\"mb-2\"\n                        />\n\n                        <div className=\"btn-box\">\n                          {usedTechnologies.length !== 1 && (\n                            <button\n                              className=\"btn btn-sm btn-danger mr-2 my-3\"\n                              onClick={() => handleRemoveClick(i)}\n                            >\n                              <AiOutlineDelete />\n                            </button>\n                          )}\n                          {usedTechnologies.length - 1 === i && (\n                            <button\n                              className=\"btn btn-sm btn-info my-3\"\n                              onClick={handleAddClick}\n                            >\n                              <AiOutlinePlus />\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                  <Form.Label>Duties</Form.Label>\n                  {duties.map((x, i) => {\n                    return (\n                      <div key={i}>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter name\"\n                          name=\"duty\"\n                          value={x.duty}\n                          onChange={(e) => handleDutiesChange(e, i)}\n                          className=\"mb-2\"\n                        />\n\n                        <div className=\"btn-box\">\n                          {duties.length !== 1 && (\n                            <button\n                              className=\"btn btn-sm btn-danger mr-2 my-3\"\n                              onClick={() => handleDutyRemoveClick(i)}\n                            >\n                              <AiOutlineDelete />\n                            </button>\n                          )}\n                          {duties.length - 1 === i && (\n                            <button\n                              className=\"btn btn-sm btn-info my-3\"\n                              onClick={handleDutyAddClick}\n                            >\n                              <AiOutlinePlus />\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditExperienceForm;\n","/home/manvir/Desktop/portfolio/frontend/src/reducers/skillsReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/skillsConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminSkillsSection.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/skillsActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditSkillForm.js",["257","258","259","260"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listSkillDetails, updateSkill } from \"../../actions/skillsActions\";\nimport { SKILL_UPDATE_RESET } from \"../../constants/skillsConstants\";\nconst EditSkillForm = ({ history, match }) => {\n  const skillId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const skillDetails = useSelector((state) => state.skillDetails);\n  const { loading, error, skill } = skillDetails;\n\n  const skillUpdate = useSelector((state) => state.skillUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = skillUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: SKILL_UPDATE_RESET });\n      dispatch(listSkillDetails(skillId));\n      history.push(\"/dashboard/skillSection\");\n    } else {\n      if (!skill.name || skill._id !== skillId) {\n        dispatch(listSkillDetails(skillId));\n      } else {\n        setName(skill.name);\n        setValue(skill.value);\n        setIcon(skill.icon);\n        setCategory(skill.category);\n      }\n    }\n  }, [dispatch, skillId, history, skill, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name, value, icon, category);\n    dispatch(\n      updateSkill({\n        _id: skillId,\n        name,\n        value,\n        icon,\n        category,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"skills\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Skill </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter label\"\n                    value={name}\n                    name=\"name\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n                {value && (\n                  <Form.Group controlId=\"formSummary\">\n                    <Form.Label>Value</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Enter Value\"\n                      value={value}\n                      name=\"value\"\n                      onChange={(e) => setValue(e.target.value)}\n                    />\n                  </Form.Group>\n                )}\n\n                <Form.Group controlId=\"form.category\">\n                  <Form.Label>Example select</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={category}\n                    name=\"category\"\n                    onChange={(e) => setCategory(e.target.value)}\n                  >\n                    <option value=\"\">choose...</option>\n\n                    <option value=\"professional\">Professional</option>\n                    <option value=\"technical\">Technical</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Icon</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Icon\"\n                    value={icon}\n                    name=\"icon\"\n                    onChange={(e) => setIcon(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditSkillForm;\n","/home/manvir/Desktop/portfolio/frontend/src/reducers/qualificatinsReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/qualificationsConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminQualificationSection.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/qualificationsActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditQualificationForm.js",["261","262","263","264"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listQualificationDetails,\n  updateQualification,\n} from \"../../actions/qualificationsActions\";\nimport { QUALIFICATION_UPDATE_RESET } from \"../../constants/qualificationsConstants\";\nconst EditQualificationForm = ({ history, match }) => {\n  const qualificationId = match.params.id;\n\n  const [institution, setInstitution] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [studyType, setStudyType] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const qualificationDetails = useSelector(\n    (state) => state.qualificationDetails\n  );\n  const { loading, error, qualification } = qualificationDetails;\n\n  const qualificationUpdate = useSelector((state) => state.qualificationUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = qualificationUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: QUALIFICATION_UPDATE_RESET });\n      dispatch(listQualificationDetails(qualificationId));\n      history.push(\"/dashboard/qualificationSection\");\n    } else {\n      if (!qualification.institution || qualification._id !== qualificationId) {\n        dispatch(listQualificationDetails(qualificationId));\n      } else {\n        setInstitution(qualification.institution);\n        setSummary(qualification.summary);\n        setStudyType(qualification.studyType);\n        setDuration(qualification.duration);\n      }\n    }\n  }, [dispatch, qualificationId, history, qualification, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateQualification({\n        _id: qualificationId,\n        institution,\n        summary,\n        studyType,\n        duration,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"skills\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Skill </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Institution</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter institution\"\n                    value={institution}\n                    name=\"institution\"\n                    onChange={(e) => setInstitution(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Study Type</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter study type\"\n                    value={studyType}\n                    name=\"studyType\"\n                    onChange={(e) => setStudyType(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Duration</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter duration\"\n                    value={duration}\n                    name=\"duration\"\n                    onChange={(e) => setDuration(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>summary</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Enter summary\"\n                    value={summary}\n                    name=\"summary\"\n                    onChange={(e) => setSummary(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditQualificationForm;\n","/home/manvir/Desktop/portfolio/frontend/src/reducers/projectsReducers.js",[],"/home/manvir/Desktop/portfolio/frontend/src/constants/projectsConstants.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/adminSections/AdminProjectsSection.js",[],"/home/manvir/Desktop/portfolio/frontend/src/actions/projectsActions.js",[],"/home/manvir/Desktop/portfolio/frontend/src/components/forms/EditProjectForm.js",["265","266","267","268","269","270"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listProjectDetails,\n  updateProject,\n} from \"../../actions/projectsActions\";\nimport { PROJECT_UPDATE_RESET } from \"../../constants/projectsConstants\";\nconst EditProjectForm = ({ history, match }) => {\n  const projectId = match.params.id;\n\n  const [title, setTitle] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [technologies, setTechnologies] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const projectDetails = useSelector((state) => state.projectDetails);\n  const { loading, error, project } = projectDetails;\n\n  const projectUpdate = useSelector((state) => state.projectUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = projectUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PROJECT_UPDATE_RESET });\n      dispatch(listProjectDetails(projectId));\n      history.push(\"/dashboard/projectSection\");\n    } else {\n      if (!project.title || project._id !== projectId) {\n        dispatch(listProjectDetails(projectId));\n      } else {\n        setTitle(project.title);\n        setSummary(project.summary);\n        setImage(project.image);\n        setUrl(project.url);\n      }\n    }\n  }, [dispatch, projectId, history, project, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProject({\n        _id: projectId,\n        title,\n        summary,\n        image,\n        url,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"formSection\">\n        <div className=\"skills\">\n          <Row>\n            <Col md={12}>\n              <h1 className=\"mb-4\">Edit Project </h1>\n            </Col>\n          </Row>\n          <Row className=\"form-outer\">\n            <Col md={10}>\n              <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Title\"\n                    value={title}\n                    name=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formSummary\">\n                  <Form.Label>Summary</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Enter Summary\"\n                    value={summary}\n                    name=\"summary\"\n                    onChange={(e) => setSummary(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Image</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Image\"\n                    value={image}\n                    name=\"image\"\n                    onChange={(e) => setImage(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>URL</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter URL\"\n                    value={url}\n                    name=\"url\"\n                    onChange={(e) => setUrl(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </form>\n            </Col>\n\n            {/* ))} */}\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default EditProjectForm;\n","/home/manvir/Desktop/portfolio/frontend/src/Qualification.js",[],"/home/manvir/Desktop/portfolio/frontend/src/About.js",["271","272","273","274","275","276"],"import React, { useEffect } from \"react\";\nimport { Col, Container, Row, Card, CardDeck } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listServices } from \"./actions/servicesActions\";\nimport { getSocialProfiles } from \"./actions/socialProfilesActions\";\n\nconst About = () => {\n  const dispatch = useDispatch();\n\n  const portfolioInfo = useSelector((state) => state.portfolioInfo);\n  const { loading, error, portfolio } = portfolioInfo;\n\n  const serviceList = useSelector((state) => state.serviceList);\n  const {\n    loading: serviceLoading,\n    error: serviceError,\n    services,\n  } = serviceList;\n\n  const socialProfilesList = useSelector((state) => state.socialProfilesList);\n  const {\n    loading: socialProfilesLoading,\n    error: socialProfilesError,\n    socialProfiles,\n  } = socialProfilesList;\n\n  useEffect(() => {\n    dispatch(listServices());\n    dispatch(getSocialProfiles());\n  }, [dispatch]);\n\n  //create dynamic row with 2 items\n  let rowContents = [];\n  const contents = services.reduce((acc, s, i) => {\n    rowContents.push(\n      <Card>\n        <Card.Body>\n          <Card.Title>{s.name}</Card.Title>\n          <Card.Text>{s.description}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n    if (i % 4 === 1) {\n      acc.push(<CardDeck>{rowContents}</CardDeck>);\n      rowContents = [];\n    }\n    return acc;\n  }, []);\n  contents.push(<CardDeck>{rowContents}</CardDeck>);\n\n  return (\n    // <!-- ======= About Section ======= -->\n    <section id=\"about\" className=\"about\">\n      <Container>\n        <h1 className=\"section-title\">About</h1>\n      </Container>\n      <Container>\n        <Row>\n          <Col md={6}>\n            <div\n              className=\"services\"\n              data-aos=\"fade-right\"\n              data-aos-duration=\"1000\"\n            >\n              {contents}\n            </div>\n          </Col>\n          <Col md={6}>\n            <div className=\"about-me pt-3 pl-5\">\n              <div\n                className=\"about-me-title mb-5\"\n                data-aos=\"fade-right\"\n                data-aos-duration=\"1000\"\n              >\n                <h3 data-aos=\"fade-right\" data-aos-duration=\"1000\">\n                  {portfolio && portfolio.aboutTitle}\n                </h3>\n              </div>\n              <div\n                className=\"about-me-desc mb-5\"\n                data-aos=\"fade-right\"\n                data-aos-duration=\"1000\"\n              >\n                <p>{portfolio && portfolio.aboutSummary}</p>\n              </div>\n              <div\n                className=\"social-profiles\"\n                data-aos=\"fade-right\"\n                data-aos-duration=\"1000\"\n              >\n                {socialProfiles.map((socialProfile, idx) => (\n                  <div className=\"social-profile-icon\" key={idx}>\n                    <i className={` ${socialProfile.icon}`} />\n                  </div>\n                ))}\n                {/* <div className=\"social-profile-icon\"></div>\n                <div className=\"social-profile-icon\"></div>\n                <div className=\"social-profile-icon\">\n                  {/* <i className={`fas ${skill.icon}`} />{\" \"} */}\n                {/* </div> */}\n                {/* <button className=\"btn btn-md btn-secondary mr-4\">\n                  Download my resume\n                </button>\n                <button className=\"btn btn-md btn-secondary mr-4\">\n                  Download my resume\n                </button> */}\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default About;\n","/home/manvir/Desktop/portfolio/frontend/src/Work.js",["277","278"],"/home/manvir/Desktop/portfolio/frontend/src/Contact.js",[],"/home/manvir/Desktop/portfolio/frontend/src/Skill.js",[],"/home/manvir/Desktop/portfolio/frontend/src/Hero.js",["279","280"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPortfolio } from \"./actions/portfolioActions\";\n\nconst HeroSection = () => {\n  const dispatch = useDispatch();\n\n  const portfolioInfo = useSelector((state) => state.portfolioInfo);\n  const { loading, error, portfolio } = portfolioInfo;\n\n  useEffect(() => {\n    dispatch(getPortfolio());\n  }, [dispatch]);\n\n  return (\n    // <!-- ======= Hero Section ======= -->\n    <div id=\"hero\" className=\"d-flex align-items-center justify-content-center\">\n      <div className=\"container\" data-aos=\"zoom-in\" data-aos-delay=\"100\">\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <h1>\n              {portfolio && portfolio.position}\n              <span\n                style={{ color: \"#29a19c\", fontFamily: \"Potta One, cursive\" }}\n              >\n                Web Developer\n              </span>\n            </h1>\n            <p className=\"my-4\">{portfolio && portfolio.summary}</p>\n            <div className=\"cta-btns\">\n              <button className=\"btn btn-md btn-secondary mr-4\">\n                Download my resume\n              </button>\n              <button className=\"btn btn-md btn-secondary mr-4\">\n                See my work\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    // <!-- End Hero -->\n  );\n};\n\nexport default HeroSection;\n","/home/manvir/Desktop/portfolio/frontend/src/Experience.js",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":61,"column":6,"nodeType":"287","endLine":61,"endColumn":77,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":19,"column":11,"nodeType":"291","messageId":"292","endLine":19,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":19,"column":20,"nodeType":"291","messageId":"292","endLine":19,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":23,"column":14,"nodeType":"291","messageId":"292","endLine":23,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":24,"column":12,"nodeType":"291","messageId":"292","endLine":24,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":21,"column":11,"nodeType":"291","messageId":"292","endLine":21,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":21,"column":20,"nodeType":"291","messageId":"292","endLine":21,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":25,"column":14,"nodeType":"291","messageId":"292","endLine":25,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":26,"column":12,"nodeType":"291","messageId":"292","endLine":26,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":17,"column":11,"nodeType":"291","messageId":"292","endLine":17,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":17,"column":20,"nodeType":"291","messageId":"292","endLine":17,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":22,"column":14,"nodeType":"291","messageId":"292","endLine":22,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":23,"column":12,"nodeType":"291","messageId":"292","endLine":23,"endColumn":23},{"ruleId":"285","severity":1,"message":"296","line":42,"column":6,"nodeType":"287","endLine":42,"endColumn":67,"suggestions":"297"},{"ruleId":"289","severity":1,"message":"290","line":66,"column":11,"nodeType":"291","messageId":"292","endLine":66,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":66,"column":20,"nodeType":"291","messageId":"292","endLine":66,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":70,"column":14,"nodeType":"291","messageId":"292","endLine":70,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":71,"column":12,"nodeType":"291","messageId":"292","endLine":71,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":17,"column":11,"nodeType":"291","messageId":"292","endLine":17,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":17,"column":20,"nodeType":"291","messageId":"292","endLine":17,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":21,"column":14,"nodeType":"291","messageId":"292","endLine":21,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":22,"column":12,"nodeType":"291","messageId":"292","endLine":22,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":22,"column":11,"nodeType":"291","messageId":"292","endLine":22,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":22,"column":20,"nodeType":"291","messageId":"292","endLine":22,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":26,"column":14,"nodeType":"291","messageId":"292","endLine":26,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":27,"column":12,"nodeType":"291","messageId":"292","endLine":27,"endColumn":23},{"ruleId":"289","severity":1,"message":"298","line":15,"column":10,"nodeType":"291","messageId":"292","endLine":15,"endColumn":22},{"ruleId":"289","severity":1,"message":"299","line":15,"column":24,"nodeType":"291","messageId":"292","endLine":15,"endColumn":39},{"ruleId":"289","severity":1,"message":"290","line":21,"column":11,"nodeType":"291","messageId":"292","endLine":21,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":21,"column":20,"nodeType":"291","messageId":"292","endLine":21,"endColumn":25},{"ruleId":"289","severity":1,"message":"294","line":25,"column":14,"nodeType":"291","messageId":"292","endLine":25,"endColumn":27},{"ruleId":"289","severity":1,"message":"295","line":26,"column":12,"nodeType":"291","messageId":"292","endLine":26,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":11,"column":11,"nodeType":"291","messageId":"292","endLine":11,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":11,"column":20,"nodeType":"291","messageId":"292","endLine":11,"endColumn":25},{"ruleId":"289","severity":1,"message":"300","line":15,"column":14,"nodeType":"291","messageId":"292","endLine":15,"endColumn":28},{"ruleId":"289","severity":1,"message":"301","line":16,"column":12,"nodeType":"291","messageId":"292","endLine":16,"endColumn":24},{"ruleId":"289","severity":1,"message":"302","line":22,"column":14,"nodeType":"291","messageId":"292","endLine":22,"endColumn":35},{"ruleId":"289","severity":1,"message":"303","line":23,"column":12,"nodeType":"291","messageId":"292","endLine":23,"endColumn":31},{"ruleId":"289","severity":1,"message":"304","line":2,"column":26,"nodeType":"291","messageId":"292","endLine":2,"endColumn":30},{"ruleId":"305","severity":1,"message":"306","line":40,"column":17,"nodeType":"307","endLine":40,"endColumn":44},{"ruleId":"289","severity":1,"message":"290","line":10,"column":11,"nodeType":"291","messageId":"292","endLine":10,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":10,"column":20,"nodeType":"291","messageId":"292","endLine":10,"endColumn":25},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'portfolio.position' and 'portfolio.summary'. Either include them or remove the dependency array.","ArrayExpression",["310"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'portfolio.resumePath' and 'portfolio.summary'. Either include them or remove the dependency array.",["311"],"'technologies' is assigned a value but never used.","'setTechnologies' is assigned a value but never used.","'serviceLoading' is assigned a value but never used.","'serviceError' is assigned a value but never used.","'socialProfilesLoading' is assigned a value but never used.","'socialProfilesError' is assigned a value but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [dispatch, portfolio.aboutTitle, portfolio.aboutSummary, successUpdate, portfolio.position, portfolio.summary]",{"range":"316","text":"317"},"Update the dependencies array to be: [dispatch, portfolio.name, portfolio.position, portfolio.resumePath, portfolio.summary, successUpdate]",{"range":"318","text":"319"},[1978,2049],"[dispatch, portfolio.aboutTitle, portfolio.aboutSummary, successUpdate, portfolio.position, portfolio.summary]",[1394,1455],"[dispatch, portfolio.name, portfolio.position, portfolio.resumePath, portfolio.summary, successUpdate]"]